/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.domino.BulkNoteFunction', null, global);
goog.exportSymbol('proto.domino.BulkNoteOption', null, global);
goog.exportSymbol('proto.domino.BulkNoteReq', null, global);
goog.exportSymbol('proto.domino.BulkNoteRsp', null, global);
goog.exportSymbol('proto.domino.Item', null, global);
goog.exportSymbol('proto.domino.Item.Flags1', null, global);
goog.exportSymbol('proto.domino.Item.ValueNumber', null, global);
goog.exportSymbol('proto.domino.Item.ValueText', null, global);
goog.exportSymbol('proto.domino.Item.ValueTime', null, global);
goog.exportSymbol('proto.domino.KeyValueDictionary', null, global);
goog.exportSymbol('proto.domino.KeyValueEntry', null, global);
goog.exportSymbol('proto.domino.Note', null, global);
goog.exportSymbol('proto.domino.NoteList', null, global);
goog.exportSymbol('proto.domino.NoteSearchReq', null, global);
goog.exportSymbol('proto.domino.NoteSearchRsp', null, global);
goog.exportSymbol('proto.domino.QueryArg', null, global);
goog.exportSymbol('proto.domino.QueryArgList', null, global);
goog.exportSymbol('proto.domino.ReturnCodeMsg', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.ReturnCodeMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.domino.ReturnCodeMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.ReturnCodeMsg.displayName = 'proto.domino.ReturnCodeMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.ReturnCodeMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.ReturnCodeMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.ReturnCodeMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.ReturnCodeMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    returnCode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    errorText: jspb.Message.getFieldWithDefault(msg, 3, ""),
    errorFile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    errorLine: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.ReturnCodeMsg}
 */
proto.domino.ReturnCodeMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.ReturnCodeMsg;
  return proto.domino.ReturnCodeMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.ReturnCodeMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.ReturnCodeMsg}
 */
proto.domino.ReturnCodeMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReturnCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorText(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorFile(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setErrorLine(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.ReturnCodeMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.ReturnCodeMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.ReturnCodeMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.ReturnCodeMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturnCode();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getErrorText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getErrorFile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getErrorLine();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional uint32 return_code = 1;
 * @return {number}
 */
proto.domino.ReturnCodeMsg.prototype.getReturnCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.domino.ReturnCodeMsg.prototype.setReturnCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string error_text = 3;
 * @return {string}
 */
proto.domino.ReturnCodeMsg.prototype.getErrorText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.domino.ReturnCodeMsg.prototype.setErrorText = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string error_file = 4;
 * @return {string}
 */
proto.domino.ReturnCodeMsg.prototype.getErrorFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.domino.ReturnCodeMsg.prototype.setErrorFile = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional uint32 error_line = 5;
 * @return {number}
 */
proto.domino.ReturnCodeMsg.prototype.getErrorLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.domino.ReturnCodeMsg.prototype.setErrorLine = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.QueryArg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.domino.QueryArg.oneofGroups_);
};
goog.inherits(proto.domino.QueryArg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.QueryArg.displayName = 'proto.domino.QueryArg';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.domino.QueryArg.oneofGroups_ = [[1,2],[3,4,5]];

/**
 * @enum {number}
 */
proto.domino.QueryArg.IdentCase = {
  IDENT_NOT_SET: 0,
  ORDINAL: 1,
  NAME: 2
};

/**
 * @return {proto.domino.QueryArg.IdentCase}
 */
proto.domino.QueryArg.prototype.getIdentCase = function() {
  return /** @type {proto.domino.QueryArg.IdentCase} */(jspb.Message.computeOneofCase(this, proto.domino.QueryArg.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.domino.QueryArg.ValueCase = {
  VALUE_NOT_SET: 0,
  VALUE_TEXT: 3,
  VALUE_TIME: 4,
  VALUE_NUMBER: 5
};

/**
 * @return {proto.domino.QueryArg.ValueCase}
 */
proto.domino.QueryArg.prototype.getValueCase = function() {
  return /** @type {proto.domino.QueryArg.ValueCase} */(jspb.Message.computeOneofCase(this, proto.domino.QueryArg.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.QueryArg.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.QueryArg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.QueryArg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.QueryArg.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordinal: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    valueText: jspb.Message.getFieldWithDefault(msg, 3, ""),
    valueTime: jspb.Message.getFieldWithDefault(msg, 4, ""),
    valueNumber: +jspb.Message.getFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.QueryArg}
 */
proto.domino.QueryArg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.QueryArg;
  return proto.domino.QueryArg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.QueryArg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.QueryArg}
 */
proto.domino.QueryArg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrdinal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueText(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValueNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.QueryArg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.QueryArg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.QueryArg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.QueryArg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional uint32 ordinal = 1;
 * @return {number}
 */
proto.domino.QueryArg.prototype.getOrdinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.domino.QueryArg.prototype.setOrdinal = function(value) {
  jspb.Message.setOneofField(this, 1, proto.domino.QueryArg.oneofGroups_[0], value);
};


proto.domino.QueryArg.prototype.clearOrdinal = function() {
  jspb.Message.setOneofField(this, 1, proto.domino.QueryArg.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.QueryArg.prototype.hasOrdinal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.domino.QueryArg.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.domino.QueryArg.prototype.setName = function(value) {
  jspb.Message.setOneofField(this, 2, proto.domino.QueryArg.oneofGroups_[0], value);
};


proto.domino.QueryArg.prototype.clearName = function() {
  jspb.Message.setOneofField(this, 2, proto.domino.QueryArg.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.QueryArg.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string value_text = 3;
 * @return {string}
 */
proto.domino.QueryArg.prototype.getValueText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.domino.QueryArg.prototype.setValueText = function(value) {
  jspb.Message.setOneofField(this, 3, proto.domino.QueryArg.oneofGroups_[1], value);
};


proto.domino.QueryArg.prototype.clearValueText = function() {
  jspb.Message.setOneofField(this, 3, proto.domino.QueryArg.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.QueryArg.prototype.hasValueText = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string value_time = 4;
 * @return {string}
 */
proto.domino.QueryArg.prototype.getValueTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.domino.QueryArg.prototype.setValueTime = function(value) {
  jspb.Message.setOneofField(this, 4, proto.domino.QueryArg.oneofGroups_[1], value);
};


proto.domino.QueryArg.prototype.clearValueTime = function() {
  jspb.Message.setOneofField(this, 4, proto.domino.QueryArg.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.QueryArg.prototype.hasValueTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double value_number = 5;
 * @return {number}
 */
proto.domino.QueryArg.prototype.getValueNumber = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.domino.QueryArg.prototype.setValueNumber = function(value) {
  jspb.Message.setOneofField(this, 5, proto.domino.QueryArg.oneofGroups_[1], value);
};


proto.domino.QueryArg.prototype.clearValueNumber = function() {
  jspb.Message.setOneofField(this, 5, proto.domino.QueryArg.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.QueryArg.prototype.hasValueNumber = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.QueryArgList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.domino.QueryArgList.repeatedFields_, null);
};
goog.inherits(proto.domino.QueryArgList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.QueryArgList.displayName = 'proto.domino.QueryArgList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.domino.QueryArgList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.QueryArgList.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.QueryArgList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.QueryArgList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.QueryArgList.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryArgList: jspb.Message.toObjectList(msg.getQueryArgList(),
    proto.domino.QueryArg.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.QueryArgList}
 */
proto.domino.QueryArgList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.QueryArgList;
  return proto.domino.QueryArgList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.QueryArgList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.QueryArgList}
 */
proto.domino.QueryArgList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.domino.QueryArg;
      reader.readMessage(value,proto.domino.QueryArg.deserializeBinaryFromReader);
      msg.addQueryArg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.QueryArgList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.QueryArgList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.QueryArgList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.QueryArgList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryArgList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.domino.QueryArg.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueryArg query_arg = 1;
 * @return {!Array.<!proto.domino.QueryArg>}
 */
proto.domino.QueryArgList.prototype.getQueryArgList = function() {
  return /** @type{!Array.<!proto.domino.QueryArg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.domino.QueryArg, 1));
};


/** @param {!Array.<!proto.domino.QueryArg>} value */
proto.domino.QueryArgList.prototype.setQueryArgList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domino.QueryArg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domino.QueryArg}
 */
proto.domino.QueryArgList.prototype.addQueryArg = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domino.QueryArg, opt_index);
};


proto.domino.QueryArgList.prototype.clearQueryArgList = function() {
  this.setQueryArgList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.NoteSearchReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.domino.NoteSearchReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.NoteSearchReq.displayName = 'proto.domino.NoteSearchReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.NoteSearchReq.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.NoteSearchReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.NoteSearchReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.NoteSearchReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxDocsScanned: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxEntriesScanned: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxMilliSecs: jspb.Message.getFieldWithDefault(msg, 4, 0),
    queryArgList: (f = msg.getQueryArgList()) && proto.domino.QueryArgList.toObject(includeInstance, f),
    parseonly: jspb.Message.getFieldWithDefault(msg, 16, false),
    explain: jspb.Message.getFieldWithDefault(msg, 17, false),
    noexec: jspb.Message.getFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.NoteSearchReq}
 */
proto.domino.NoteSearchReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.NoteSearchReq;
  return proto.domino.NoteSearchReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.NoteSearchReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.NoteSearchReq}
 */
proto.domino.NoteSearchReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxDocsScanned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxEntriesScanned(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxMilliSecs(value);
      break;
    case 5:
      var value = new proto.domino.QueryArgList;
      reader.readMessage(value,proto.domino.QueryArgList.deserializeBinaryFromReader);
      msg.setQueryArgList(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setParseonly(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExplain(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoexec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.NoteSearchReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.NoteSearchReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.NoteSearchReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.NoteSearchReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxDocsScanned();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMaxEntriesScanned();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMaxMilliSecs();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getQueryArgList();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.domino.QueryArgList.serializeBinaryToWriter
    );
  }
  f = message.getParseonly();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getExplain();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getNoexec();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.domino.NoteSearchReq.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.domino.NoteSearchReq.prototype.setQuery = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 max_docs_scanned = 2;
 * @return {number}
 */
proto.domino.NoteSearchReq.prototype.getMaxDocsScanned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.domino.NoteSearchReq.prototype.setMaxDocsScanned = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 max_entries_scanned = 3;
 * @return {number}
 */
proto.domino.NoteSearchReq.prototype.getMaxEntriesScanned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.domino.NoteSearchReq.prototype.setMaxEntriesScanned = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 max_milli_secs = 4;
 * @return {number}
 */
proto.domino.NoteSearchReq.prototype.getMaxMilliSecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.domino.NoteSearchReq.prototype.setMaxMilliSecs = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional QueryArgList query_arg_list = 5;
 * @return {?proto.domino.QueryArgList}
 */
proto.domino.NoteSearchReq.prototype.getQueryArgList = function() {
  return /** @type{?proto.domino.QueryArgList} */ (
    jspb.Message.getWrapperField(this, proto.domino.QueryArgList, 5));
};


/** @param {?proto.domino.QueryArgList|undefined} value */
proto.domino.NoteSearchReq.prototype.setQueryArgList = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.domino.NoteSearchReq.prototype.clearQueryArgList = function() {
  this.setQueryArgList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.NoteSearchReq.prototype.hasQueryArgList = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool parseonly = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.domino.NoteSearchReq.prototype.getParseonly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.domino.NoteSearchReq.prototype.setParseonly = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional bool explain = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.domino.NoteSearchReq.prototype.getExplain = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.domino.NoteSearchReq.prototype.setExplain = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * optional bool noexec = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.domino.NoteSearchReq.prototype.getNoexec = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.domino.NoteSearchReq.prototype.setNoexec = function(value) {
  jspb.Message.setField(this, 18, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.NoteSearchRsp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.domino.NoteSearchRsp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.NoteSearchRsp.displayName = 'proto.domino.NoteSearchRsp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.NoteSearchRsp.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.NoteSearchRsp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.NoteSearchRsp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.NoteSearchRsp.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryExplain: jspb.Message.getFieldWithDefault(msg, 1, ""),
    queryError: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.NoteSearchRsp}
 */
proto.domino.NoteSearchRsp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.NoteSearchRsp;
  return proto.domino.NoteSearchRsp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.NoteSearchRsp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.NoteSearchRsp}
 */
proto.domino.NoteSearchRsp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryExplain(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.NoteSearchRsp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.NoteSearchRsp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.NoteSearchRsp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.NoteSearchRsp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryExplain();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQueryError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string query_explain = 1;
 * @return {string}
 */
proto.domino.NoteSearchRsp.prototype.getQueryExplain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.domino.NoteSearchRsp.prototype.setQueryExplain = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string query_error = 2;
 * @return {string}
 */
proto.domino.NoteSearchRsp.prototype.getQueryError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.domino.NoteSearchRsp.prototype.setQueryError = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.Note = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.domino.Note.repeatedFields_, null);
};
goog.inherits(proto.domino.Note, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.Note.displayName = 'proto.domino.Note';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.domino.Note.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.Note.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.Note.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.Note} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Note.toObject = function(includeInstance, msg) {
  var f, obj = {
    unid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.domino.Item.toObject, includeInstance),
    rc: (f = msg.getRc()) && proto.domino.ReturnCodeMsg.toObject(includeInstance, f),
    created: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastModified: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.Note}
 */
proto.domino.Note.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.Note;
  return proto.domino.Note.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.Note} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.Note}
 */
proto.domino.Note.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnid(value);
      break;
    case 2:
      var value = new proto.domino.Item;
      reader.readMessage(value,proto.domino.Item.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    case 3:
      var value = new proto.domino.ReturnCodeMsg;
      reader.readMessage(value,proto.domino.ReturnCodeMsg.deserializeBinaryFromReader);
      msg.setRc(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastModified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.Note.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.Note.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.Note} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Note.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.domino.Item.serializeBinaryToWriter
    );
  }
  f = message.getRc();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.domino.ReturnCodeMsg.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastModified();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string unid = 1;
 * @return {string}
 */
proto.domino.Note.prototype.getUnid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.domino.Note.prototype.setUnid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated Item item = 2;
 * @return {!Array.<!proto.domino.Item>}
 */
proto.domino.Note.prototype.getItemList = function() {
  return /** @type{!Array.<!proto.domino.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.domino.Item, 2));
};


/** @param {!Array.<!proto.domino.Item>} value */
proto.domino.Note.prototype.setItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.domino.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domino.Item}
 */
proto.domino.Note.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.domino.Item, opt_index);
};


proto.domino.Note.prototype.clearItemList = function() {
  this.setItemList([]);
};


/**
 * optional ReturnCodeMsg rc = 3;
 * @return {?proto.domino.ReturnCodeMsg}
 */
proto.domino.Note.prototype.getRc = function() {
  return /** @type{?proto.domino.ReturnCodeMsg} */ (
    jspb.Message.getWrapperField(this, proto.domino.ReturnCodeMsg, 3));
};


/** @param {?proto.domino.ReturnCodeMsg|undefined} value */
proto.domino.Note.prototype.setRc = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.domino.Note.prototype.clearRc = function() {
  this.setRc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.Note.prototype.hasRc = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string created = 4;
 * @return {string}
 */
proto.domino.Note.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.domino.Note.prototype.setCreated = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string last_modified = 5;
 * @return {string}
 */
proto.domino.Note.prototype.getLastModified = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.domino.Note.prototype.setLastModified = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.domino.Item.oneofGroups_);
};
goog.inherits(proto.domino.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.Item.displayName = 'proto.domino.Item';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.domino.Item.oneofGroups_ = [[1,2],[3,4,5]];

/**
 * @enum {number}
 */
proto.domino.Item.IdentCase = {
  IDENT_NOT_SET: 0,
  NAME: 1,
  KEY: 2
};

/**
 * @return {proto.domino.Item.IdentCase}
 */
proto.domino.Item.prototype.getIdentCase = function() {
  return /** @type {proto.domino.Item.IdentCase} */(jspb.Message.computeOneofCase(this, proto.domino.Item.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.domino.Item.ValueCase = {
  VALUE_NOT_SET: 0,
  VALUE_TEXT: 3,
  VALUE_TIME: 4,
  VALUE_NUMBER: 5
};

/**
 * @return {proto.domino.Item.ValueCase}
 */
proto.domino.Item.prototype.getValueCase = function() {
  return /** @type {proto.domino.Item.ValueCase} */(jspb.Message.computeOneofCase(this, proto.domino.Item.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    key: jspb.Message.getFieldWithDefault(msg, 2, 0),
    flags1: jspb.Message.getFieldWithDefault(msg, 7, 0),
    valueText: (f = msg.getValueText()) && proto.domino.Item.ValueText.toObject(includeInstance, f),
    valueTime: (f = msg.getValueTime()) && proto.domino.Item.ValueTime.toObject(includeInstance, f),
    valueNumber: (f = msg.getValueNumber()) && proto.domino.Item.ValueNumber.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.Item}
 */
proto.domino.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.Item;
  return proto.domino.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.Item}
 */
proto.domino.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKey(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFlags1(value);
      break;
    case 3:
      var value = new proto.domino.Item.ValueText;
      reader.readMessage(value,proto.domino.Item.ValueText.deserializeBinaryFromReader);
      msg.setValueText(value);
      break;
    case 4:
      var value = new proto.domino.Item.ValueTime;
      reader.readMessage(value,proto.domino.Item.ValueTime.deserializeBinaryFromReader);
      msg.setValueTime(value);
      break;
    case 5:
      var value = new proto.domino.Item.ValueNumber;
      reader.readMessage(value,proto.domino.Item.ValueNumber.deserializeBinaryFromReader);
      msg.setValueNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFlags1();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getValueText();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.domino.Item.ValueText.serializeBinaryToWriter
    );
  }
  f = message.getValueTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.domino.Item.ValueTime.serializeBinaryToWriter
    );
  }
  f = message.getValueNumber();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.domino.Item.ValueNumber.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.domino.Item.Flags1 = {
  NONE: 0,
  AS_SINGLETON: 1,
  AS_PAIRS: 2,
  ENCRYPT: 4,
  NONSUMMARY: 8
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.Item.ValueText = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.domino.Item.ValueText.repeatedFields_, null);
};
goog.inherits(proto.domino.Item.ValueText, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.Item.ValueText.displayName = 'proto.domino.Item.ValueText';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.domino.Item.ValueText.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.Item.ValueText.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.Item.ValueText.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.Item.ValueText} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Item.ValueText.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueTextList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.Item.ValueText}
 */
proto.domino.Item.ValueText.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.Item.ValueText;
  return proto.domino.Item.ValueText.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.Item.ValueText} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.Item.ValueText}
 */
proto.domino.Item.ValueText.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValueText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.Item.ValueText.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.Item.ValueText.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.Item.ValueText} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Item.ValueText.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueTextList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string value_text = 1;
 * @return {!Array.<string>}
 */
proto.domino.Item.ValueText.prototype.getValueTextList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.domino.Item.ValueText.prototype.setValueTextList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.domino.Item.ValueText.prototype.addValueText = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.domino.Item.ValueText.prototype.clearValueTextList = function() {
  this.setValueTextList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.Item.ValueTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.domino.Item.ValueTime.repeatedFields_, null);
};
goog.inherits(proto.domino.Item.ValueTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.Item.ValueTime.displayName = 'proto.domino.Item.ValueTime';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.domino.Item.ValueTime.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.Item.ValueTime.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.Item.ValueTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.Item.ValueTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Item.ValueTime.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueTimeList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.Item.ValueTime}
 */
proto.domino.Item.ValueTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.Item.ValueTime;
  return proto.domino.Item.ValueTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.Item.ValueTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.Item.ValueTime}
 */
proto.domino.Item.ValueTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValueTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.Item.ValueTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.Item.ValueTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.Item.ValueTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Item.ValueTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueTimeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string value_time = 1;
 * @return {!Array.<string>}
 */
proto.domino.Item.ValueTime.prototype.getValueTimeList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.domino.Item.ValueTime.prototype.setValueTimeList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.domino.Item.ValueTime.prototype.addValueTime = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.domino.Item.ValueTime.prototype.clearValueTimeList = function() {
  this.setValueTimeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.Item.ValueNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.domino.Item.ValueNumber.repeatedFields_, null);
};
goog.inherits(proto.domino.Item.ValueNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.Item.ValueNumber.displayName = 'proto.domino.Item.ValueNumber';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.domino.Item.ValueNumber.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.Item.ValueNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.Item.ValueNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.Item.ValueNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Item.ValueNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueNumberList: jspb.Message.getRepeatedFloatingPointField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.Item.ValueNumber}
 */
proto.domino.Item.ValueNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.Item.ValueNumber;
  return proto.domino.Item.ValueNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.Item.ValueNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.Item.ValueNumber}
 */
proto.domino.Item.ValueNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setValueNumberList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.Item.ValueNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.Item.ValueNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.Item.ValueNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.Item.ValueNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueNumberList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
};


/**
 * repeated double value_number = 1;
 * @return {!Array.<number>}
 */
proto.domino.Item.ValueNumber.prototype.getValueNumberList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/** @param {!Array.<number>} value */
proto.domino.Item.ValueNumber.prototype.setValueNumberList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.domino.Item.ValueNumber.prototype.addValueNumber = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.domino.Item.ValueNumber.prototype.clearValueNumberList = function() {
  this.setValueNumberList([]);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.domino.Item.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.domino.Item.prototype.setName = function(value) {
  jspb.Message.setOneofField(this, 1, proto.domino.Item.oneofGroups_[0], value);
};


proto.domino.Item.prototype.clearName = function() {
  jspb.Message.setOneofField(this, 1, proto.domino.Item.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.Item.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 key = 2;
 * @return {number}
 */
proto.domino.Item.prototype.getKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.domino.Item.prototype.setKey = function(value) {
  jspb.Message.setOneofField(this, 2, proto.domino.Item.oneofGroups_[0], value);
};


proto.domino.Item.prototype.clearKey = function() {
  jspb.Message.setOneofField(this, 2, proto.domino.Item.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.Item.prototype.hasKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 flags1 = 7;
 * @return {number}
 */
proto.domino.Item.prototype.getFlags1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.domino.Item.prototype.setFlags1 = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional ValueText value_text = 3;
 * @return {?proto.domino.Item.ValueText}
 */
proto.domino.Item.prototype.getValueText = function() {
  return /** @type{?proto.domino.Item.ValueText} */ (
    jspb.Message.getWrapperField(this, proto.domino.Item.ValueText, 3));
};


/** @param {?proto.domino.Item.ValueText|undefined} value */
proto.domino.Item.prototype.setValueText = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.domino.Item.oneofGroups_[1], value);
};


proto.domino.Item.prototype.clearValueText = function() {
  this.setValueText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.Item.prototype.hasValueText = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ValueTime value_time = 4;
 * @return {?proto.domino.Item.ValueTime}
 */
proto.domino.Item.prototype.getValueTime = function() {
  return /** @type{?proto.domino.Item.ValueTime} */ (
    jspb.Message.getWrapperField(this, proto.domino.Item.ValueTime, 4));
};


/** @param {?proto.domino.Item.ValueTime|undefined} value */
proto.domino.Item.prototype.setValueTime = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.domino.Item.oneofGroups_[1], value);
};


proto.domino.Item.prototype.clearValueTime = function() {
  this.setValueTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.Item.prototype.hasValueTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ValueNumber value_number = 5;
 * @return {?proto.domino.Item.ValueNumber}
 */
proto.domino.Item.prototype.getValueNumber = function() {
  return /** @type{?proto.domino.Item.ValueNumber} */ (
    jspb.Message.getWrapperField(this, proto.domino.Item.ValueNumber, 5));
};


/** @param {?proto.domino.Item.ValueNumber|undefined} value */
proto.domino.Item.prototype.setValueNumber = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.domino.Item.oneofGroups_[1], value);
};


proto.domino.Item.prototype.clearValueNumber = function() {
  this.setValueNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.Item.prototype.hasValueNumber = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.KeyValueEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.domino.KeyValueEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.KeyValueEntry.displayName = 'proto.domino.KeyValueEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.KeyValueEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.KeyValueEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.KeyValueEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.KeyValueEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.KeyValueEntry}
 */
proto.domino.KeyValueEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.KeyValueEntry;
  return proto.domino.KeyValueEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.KeyValueEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.KeyValueEntry}
 */
proto.domino.KeyValueEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.KeyValueEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.KeyValueEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.KeyValueEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.KeyValueEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 key = 1;
 * @return {number}
 */
proto.domino.KeyValueEntry.prototype.getKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.domino.KeyValueEntry.prototype.setKey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.domino.KeyValueEntry.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.domino.KeyValueEntry.prototype.setValue = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.KeyValueDictionary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.domino.KeyValueDictionary.repeatedFields_, null);
};
goog.inherits(proto.domino.KeyValueDictionary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.KeyValueDictionary.displayName = 'proto.domino.KeyValueDictionary';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.domino.KeyValueDictionary.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.KeyValueDictionary.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.KeyValueDictionary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.KeyValueDictionary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.KeyValueDictionary.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.domino.KeyValueEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.KeyValueDictionary}
 */
proto.domino.KeyValueDictionary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.KeyValueDictionary;
  return proto.domino.KeyValueDictionary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.KeyValueDictionary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.KeyValueDictionary}
 */
proto.domino.KeyValueDictionary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.domino.KeyValueEntry;
      reader.readMessage(value,proto.domino.KeyValueEntry.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.KeyValueDictionary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.KeyValueDictionary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.KeyValueDictionary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.KeyValueDictionary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.domino.KeyValueEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KeyValueEntry entry = 1;
 * @return {!Array.<!proto.domino.KeyValueEntry>}
 */
proto.domino.KeyValueDictionary.prototype.getEntryList = function() {
  return /** @type{!Array.<!proto.domino.KeyValueEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.domino.KeyValueEntry, 1));
};


/** @param {!Array.<!proto.domino.KeyValueEntry>} value */
proto.domino.KeyValueDictionary.prototype.setEntryList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domino.KeyValueEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domino.KeyValueEntry}
 */
proto.domino.KeyValueDictionary.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domino.KeyValueEntry, opt_index);
};


proto.domino.KeyValueDictionary.prototype.clearEntryList = function() {
  this.setEntryList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.NoteList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.domino.NoteList.repeatedFields_, null);
};
goog.inherits(proto.domino.NoteList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.NoteList.displayName = 'proto.domino.NoteList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.domino.NoteList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.NoteList.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.NoteList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.NoteList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.NoteList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemDict: (f = msg.getItemDict()) && proto.domino.KeyValueDictionary.toObject(includeInstance, f),
    noteList: jspb.Message.toObjectList(msg.getNoteList(),
    proto.domino.Note.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.NoteList}
 */
proto.domino.NoteList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.NoteList;
  return proto.domino.NoteList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.NoteList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.NoteList}
 */
proto.domino.NoteList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.domino.KeyValueDictionary;
      reader.readMessage(value,proto.domino.KeyValueDictionary.deserializeBinaryFromReader);
      msg.setItemDict(value);
      break;
    case 2:
      var value = new proto.domino.Note;
      reader.readMessage(value,proto.domino.Note.deserializeBinaryFromReader);
      msg.addNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.NoteList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.NoteList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.NoteList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.NoteList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemDict();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.domino.KeyValueDictionary.serializeBinaryToWriter
    );
  }
  f = message.getNoteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.domino.Note.serializeBinaryToWriter
    );
  }
};


/**
 * optional KeyValueDictionary item_dict = 1;
 * @return {?proto.domino.KeyValueDictionary}
 */
proto.domino.NoteList.prototype.getItemDict = function() {
  return /** @type{?proto.domino.KeyValueDictionary} */ (
    jspb.Message.getWrapperField(this, proto.domino.KeyValueDictionary, 1));
};


/** @param {?proto.domino.KeyValueDictionary|undefined} value */
proto.domino.NoteList.prototype.setItemDict = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.domino.NoteList.prototype.clearItemDict = function() {
  this.setItemDict(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.NoteList.prototype.hasItemDict = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Note note = 2;
 * @return {!Array.<!proto.domino.Note>}
 */
proto.domino.NoteList.prototype.getNoteList = function() {
  return /** @type{!Array.<!proto.domino.Note>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.domino.Note, 2));
};


/** @param {!Array.<!proto.domino.Note>} value */
proto.domino.NoteList.prototype.setNoteList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.domino.Note=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domino.Note}
 */
proto.domino.NoteList.prototype.addNote = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.domino.Note, opt_index);
};


proto.domino.NoteList.prototype.clearNoteList = function() {
  this.setNoteList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.BulkNoteReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.domino.BulkNoteReq.repeatedFields_, proto.domino.BulkNoteReq.oneofGroups_);
};
goog.inherits(proto.domino.BulkNoteReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.BulkNoteReq.displayName = 'proto.domino.BulkNoteReq';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.domino.BulkNoteReq.repeatedFields_ = [6,7,10];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.domino.BulkNoteReq.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.domino.BulkNoteReq.SelectionCase = {
  SELECTION_NOT_SET: 0,
  NOTE_LIST: 3,
  NOTE_SEARCH: 4
};

/**
 * @return {proto.domino.BulkNoteReq.SelectionCase}
 */
proto.domino.BulkNoteReq.prototype.getSelectionCase = function() {
  return /** @type {proto.domino.BulkNoteReq.SelectionCase} */(jspb.Message.computeOneofCase(this, proto.domino.BulkNoteReq.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.BulkNoteReq.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.BulkNoteReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.BulkNoteReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.BulkNoteReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    databaseFile: jspb.Message.getFieldWithDefault(msg, 2, ""),
    noteList: (f = msg.getNoteList()) && proto.domino.NoteList.toObject(includeInstance, f),
    noteSearch: (f = msg.getNoteSearch()) && proto.domino.NoteSearchReq.toObject(includeInstance, f),
    functionList: jspb.Message.getRepeatedField(msg, 6),
    optionList: jspb.Message.getRepeatedField(msg, 7),
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.domino.Item.toObject, includeInstance),
    noteSkip: jspb.Message.getFieldWithDefault(msg, 11, 0),
    noteCount: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.BulkNoteReq}
 */
proto.domino.BulkNoteReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.BulkNoteReq;
  return proto.domino.BulkNoteReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.BulkNoteReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.BulkNoteReq}
 */
proto.domino.BulkNoteReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabaseFile(value);
      break;
    case 3:
      var value = new proto.domino.NoteList;
      reader.readMessage(value,proto.domino.NoteList.deserializeBinaryFromReader);
      msg.setNoteList(value);
      break;
    case 4:
      var value = new proto.domino.NoteSearchReq;
      reader.readMessage(value,proto.domino.NoteSearchReq.deserializeBinaryFromReader);
      msg.setNoteSearch(value);
      break;
    case 6:
      var value = /** @type {!Array.<!proto.domino.BulkNoteFunction>} */ (reader.readPackedEnum());
      msg.setFunctionList(value);
      break;
    case 7:
      var value = /** @type {!Array.<!proto.domino.BulkNoteOption>} */ (reader.readPackedEnum());
      msg.setOptionList(value);
      break;
    case 10:
      var value = new proto.domino.Item;
      reader.readMessage(value,proto.domino.Item.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNoteSkip(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNoteCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.BulkNoteReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.BulkNoteReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.BulkNoteReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.BulkNoteReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatabaseFile();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNoteList();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.domino.NoteList.serializeBinaryToWriter
    );
  }
  f = message.getNoteSearch();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.domino.NoteSearchReq.serializeBinaryToWriter
    );
  }
  f = message.getFunctionList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getOptionList();
  if (f.length > 0) {
    writer.writePackedEnum(
      7,
      f
    );
  }
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.domino.Item.serializeBinaryToWriter
    );
  }
  f = message.getNoteSkip();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getNoteCount();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
};


/**
 * optional string server_name = 1;
 * @return {string}
 */
proto.domino.BulkNoteReq.prototype.getServerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.domino.BulkNoteReq.prototype.setServerName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string database_file = 2;
 * @return {string}
 */
proto.domino.BulkNoteReq.prototype.getDatabaseFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.domino.BulkNoteReq.prototype.setDatabaseFile = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional NoteList note_list = 3;
 * @return {?proto.domino.NoteList}
 */
proto.domino.BulkNoteReq.prototype.getNoteList = function() {
  return /** @type{?proto.domino.NoteList} */ (
    jspb.Message.getWrapperField(this, proto.domino.NoteList, 3));
};


/** @param {?proto.domino.NoteList|undefined} value */
proto.domino.BulkNoteReq.prototype.setNoteList = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.domino.BulkNoteReq.oneofGroups_[0], value);
};


proto.domino.BulkNoteReq.prototype.clearNoteList = function() {
  this.setNoteList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.BulkNoteReq.prototype.hasNoteList = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional NoteSearchReq note_search = 4;
 * @return {?proto.domino.NoteSearchReq}
 */
proto.domino.BulkNoteReq.prototype.getNoteSearch = function() {
  return /** @type{?proto.domino.NoteSearchReq} */ (
    jspb.Message.getWrapperField(this, proto.domino.NoteSearchReq, 4));
};


/** @param {?proto.domino.NoteSearchReq|undefined} value */
proto.domino.BulkNoteReq.prototype.setNoteSearch = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.domino.BulkNoteReq.oneofGroups_[0], value);
};


proto.domino.BulkNoteReq.prototype.clearNoteSearch = function() {
  this.setNoteSearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.BulkNoteReq.prototype.hasNoteSearch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated BulkNoteFunction function = 6;
 * @return {!Array.<!proto.domino.BulkNoteFunction>}
 */
proto.domino.BulkNoteReq.prototype.getFunctionList = function() {
  return /** @type {!Array.<!proto.domino.BulkNoteFunction>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<!proto.domino.BulkNoteFunction>} value */
proto.domino.BulkNoteReq.prototype.setFunctionList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.domino.BulkNoteFunction} value
 * @param {number=} opt_index
 */
proto.domino.BulkNoteReq.prototype.addFunction = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.domino.BulkNoteReq.prototype.clearFunctionList = function() {
  this.setFunctionList([]);
};


/**
 * repeated BulkNoteOption option = 7;
 * @return {!Array.<!proto.domino.BulkNoteOption>}
 */
proto.domino.BulkNoteReq.prototype.getOptionList = function() {
  return /** @type {!Array.<!proto.domino.BulkNoteOption>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array.<!proto.domino.BulkNoteOption>} value */
proto.domino.BulkNoteReq.prototype.setOptionList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!proto.domino.BulkNoteOption} value
 * @param {number=} opt_index
 */
proto.domino.BulkNoteReq.prototype.addOption = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.domino.BulkNoteReq.prototype.clearOptionList = function() {
  this.setOptionList([]);
};


/**
 * repeated Item item = 10;
 * @return {!Array.<!proto.domino.Item>}
 */
proto.domino.BulkNoteReq.prototype.getItemList = function() {
  return /** @type{!Array.<!proto.domino.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.domino.Item, 10));
};


/** @param {!Array.<!proto.domino.Item>} value */
proto.domino.BulkNoteReq.prototype.setItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.domino.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domino.Item}
 */
proto.domino.BulkNoteReq.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.domino.Item, opt_index);
};


proto.domino.BulkNoteReq.prototype.clearItemList = function() {
  this.setItemList([]);
};


/**
 * optional uint32 note_skip = 11;
 * @return {number}
 */
proto.domino.BulkNoteReq.prototype.getNoteSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.domino.BulkNoteReq.prototype.setNoteSkip = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint32 note_count = 12;
 * @return {number}
 */
proto.domino.BulkNoteReq.prototype.getNoteCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.domino.BulkNoteReq.prototype.setNoteCount = function(value) {
  jspb.Message.setField(this, 12, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.domino.BulkNoteRsp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.domino.BulkNoteRsp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.domino.BulkNoteRsp.displayName = 'proto.domino.BulkNoteRsp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.domino.BulkNoteRsp.prototype.toObject = function(opt_includeInstance) {
  return proto.domino.BulkNoteRsp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.domino.BulkNoteRsp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.BulkNoteRsp.toObject = function(includeInstance, msg) {
  var f, obj = {
    rc: (f = msg.getRc()) && proto.domino.ReturnCodeMsg.toObject(includeInstance, f),
    noteList: (f = msg.getNoteList()) && proto.domino.NoteList.toObject(includeInstance, f),
    noteSearch: (f = msg.getNoteSearch()) && proto.domino.NoteSearchRsp.toObject(includeInstance, f),
    noteTotal: jspb.Message.getFieldWithDefault(msg, 4, 0),
    noteSkip: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.domino.BulkNoteRsp}
 */
proto.domino.BulkNoteRsp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.domino.BulkNoteRsp;
  return proto.domino.BulkNoteRsp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.domino.BulkNoteRsp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.domino.BulkNoteRsp}
 */
proto.domino.BulkNoteRsp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.domino.ReturnCodeMsg;
      reader.readMessage(value,proto.domino.ReturnCodeMsg.deserializeBinaryFromReader);
      msg.setRc(value);
      break;
    case 2:
      var value = new proto.domino.NoteList;
      reader.readMessage(value,proto.domino.NoteList.deserializeBinaryFromReader);
      msg.setNoteList(value);
      break;
    case 3:
      var value = new proto.domino.NoteSearchRsp;
      reader.readMessage(value,proto.domino.NoteSearchRsp.deserializeBinaryFromReader);
      msg.setNoteSearch(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNoteTotal(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNoteSkip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.domino.BulkNoteRsp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.domino.BulkNoteRsp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.domino.BulkNoteRsp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.domino.BulkNoteRsp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.domino.ReturnCodeMsg.serializeBinaryToWriter
    );
  }
  f = message.getNoteList();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.domino.NoteList.serializeBinaryToWriter
    );
  }
  f = message.getNoteSearch();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.domino.NoteSearchRsp.serializeBinaryToWriter
    );
  }
  f = message.getNoteTotal();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNoteSkip();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional ReturnCodeMsg rc = 1;
 * @return {?proto.domino.ReturnCodeMsg}
 */
proto.domino.BulkNoteRsp.prototype.getRc = function() {
  return /** @type{?proto.domino.ReturnCodeMsg} */ (
    jspb.Message.getWrapperField(this, proto.domino.ReturnCodeMsg, 1));
};


/** @param {?proto.domino.ReturnCodeMsg|undefined} value */
proto.domino.BulkNoteRsp.prototype.setRc = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.domino.BulkNoteRsp.prototype.clearRc = function() {
  this.setRc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.BulkNoteRsp.prototype.hasRc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NoteList note_list = 2;
 * @return {?proto.domino.NoteList}
 */
proto.domino.BulkNoteRsp.prototype.getNoteList = function() {
  return /** @type{?proto.domino.NoteList} */ (
    jspb.Message.getWrapperField(this, proto.domino.NoteList, 2));
};


/** @param {?proto.domino.NoteList|undefined} value */
proto.domino.BulkNoteRsp.prototype.setNoteList = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.domino.BulkNoteRsp.prototype.clearNoteList = function() {
  this.setNoteList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.BulkNoteRsp.prototype.hasNoteList = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NoteSearchRsp note_search = 3;
 * @return {?proto.domino.NoteSearchRsp}
 */
proto.domino.BulkNoteRsp.prototype.getNoteSearch = function() {
  return /** @type{?proto.domino.NoteSearchRsp} */ (
    jspb.Message.getWrapperField(this, proto.domino.NoteSearchRsp, 3));
};


/** @param {?proto.domino.NoteSearchRsp|undefined} value */
proto.domino.BulkNoteRsp.prototype.setNoteSearch = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.domino.BulkNoteRsp.prototype.clearNoteSearch = function() {
  this.setNoteSearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.domino.BulkNoteRsp.prototype.hasNoteSearch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 note_total = 4;
 * @return {number}
 */
proto.domino.BulkNoteRsp.prototype.getNoteTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.domino.BulkNoteRsp.prototype.setNoteTotal = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional uint32 note_skip = 5;
 * @return {number}
 */
proto.domino.BulkNoteRsp.prototype.getNoteSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.domino.BulkNoteRsp.prototype.setNoteSkip = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.domino.BulkNoteFunction = {
  CREATE_NOTE: 0,
  DELETE_NOTE: 1,
  READ_NOTE: 2,
  REPLACE_ITEM: 4,
  REPLACE_NOTE: 5,
  DELETE_ITEM: 6
};

/**
 * @enum {number}
 */
proto.domino.BulkNoteOption = {
  ON_ERROR_CONTINUE: 0,
  ON_ERROR_ABORT_REMAINING: 1
};

goog.object.extend(exports, proto.domino);
