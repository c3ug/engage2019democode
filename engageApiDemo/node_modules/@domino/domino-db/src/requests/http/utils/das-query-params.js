/* Â©Copyright HCL Technologies Ltd. 2018 */
const qs = require('qs');

const isDevMode = require('../../../utils/is-dev-mode.js');

const camelCaseToDasFormat = options => ({
  ...options,
  // (see headersHelper) 'If-Modified-Since': options.ifModifiedSince,
  ifModifiedSince: undefined,
  // (see headersHelper) 'If-Unmodified-Since': options.ifUnmodifiedSince,
  ifUnmodifiedSince: undefined,
  attachmentlinks: options.attachmentLinks,
  attachmentLinks: undefined,
  computewithform: options.computeWithForm,
  computeWithForm: undefined,
  docid: options.docId,
  docId: undefined,
  entrycount: options.entryCount,
  entryCount: undefined,
  expandlevel: options.expandLevel,
  expandLevel: undefined,
  keysexactmatch: options.keysExactMatch,
  keysExactMatch: undefined,
  lowercasefields: options.lowercaseFields,
  lowercaseFields: undefined,
  markread: options.markRead,
  markRead: undefined,
  parentid: options.parentId,
  parentId: undefined,
  since: options.modifiedSince,
  modifiedSince: undefined,
  ps: options.pageSize,
  pageSize: undefined,
  sortcolumn: options.sortColumn,
  sortColumn: undefined,
  sortorder: options.sortOrder,
  sortOrder: undefined,
  startkeys: options.startKeys,
  startKeys: undefined,
  strongtype: options.strongType,
  strongType: undefined,
  searchmaxdocs: options.searchResultsLimit,
  searchResultsLimit: undefined,
  search: options.searchString,
  searchString: undefined,
  systemcolumns: options.systemColumns,
  systemColumns: undefined,
});

const allGetTypeDefaults = {
  // Defaults of options go here
  compact: true,
};

const formatAndQuerify = options =>
  qs.stringify(camelCaseToDasFormat(options), { addQueryPrefix: true });

/*
 * Database specific flag defaults
 */
// Currently, all database level list calls use the same paramater mutation
const lists = (options = {}) =>
  formatAndQuerify({
    ...allGetTypeDefaults,
    ...options,
  });
const createDocument = options =>
  formatAndQuerify({
    ...options,
    document: undefined,
  });
/*
 * View specific flag defaults
 */
const readDesign = (options = {}) =>
  formatAndQuerify({
    ...allGetTypeDefaults,
    ...options,
  });

const listEntries = (options = {}) =>
  formatAndQuerify({
    ...allGetTypeDefaults,
    start: 0,
    count: 10,
    entryCount: true,
    ...options,
  });

/*
 * Folder specific flag defaults
 */
const updateFolder = (options = {}) =>
  formatAndQuerify({
    ...options,
    add: undefined,
    remove: undefined,
  });

/*
 * Document specific flag defaults
 */
const documentRead = (options = {}) =>
  formatAndQuerify({
    ...allGetTypeDefaults,
    // options that override "allGet" defaults
    // This is where most documentRead specific defaults will reside
    strongType: true,
    attachmentLinks: true,
    ...options,
  });
const documentUpdate = options =>
  formatAndQuerify({
    ...options,
    document: undefined,
  });
const documentReplace = options =>
  formatAndQuerify({
    ...options,
    document: undefined,
  });
const documentDelete = (options = {}) =>
  formatAndQuerify({
    ...options,
  });
const deleteAttachment = (options = {}) =>
  formatAndQuerify({
    ...options,
  });

/*
 * Agent specific flag defaults
 */
const executeAgent = options =>
  formatAndQuerify({
    ...options,
    synchronous: undefined,
    documentUnid: undefined,
    minRunInterval: undefined,
  });

module.exports = {
  database: {
    createDocument,
    listDocuments: lists,
    listViewsAndFolders: lists,
    listForms: lists,
    listAgents: lists,
  },
  view: {
    readDesign,
    listEntries,
  },
  folder: {
    update: updateFolder,
  },
  document: {
    read: documentRead,
    update: documentUpdate,
    replace: documentReplace,
    del: documentDelete,
    deleteAttachment,
  },
  agent: {
    execute: executeAgent,
  },
};

if (isDevMode) {
  module.exports.testExports = {
    camelCaseToDasFormat,
  };
}
