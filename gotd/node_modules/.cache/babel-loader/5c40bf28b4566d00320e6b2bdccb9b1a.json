{"ast":null,"code":"import _objectSpread from \"/Users/hvoigt/Documents/GitHub/qotd/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/hvoigt/Documents/GitHub/qotd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hvoigt/Documents/GitHub/qotd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _ from 'lodash';\nimport api from '../apis/qotd';\nimport history from '../history';\nimport { LOG_IN, SIGN_IN, FETCH_RESULT, FETCH_QOTD, FETCH_QUESTIONS, SUBMIT_QOTD } from './types';\nimport memoryStore from '../utils/memory-store';\nvar config = {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  auth: {\n    'username': 'gacres',\n    'password': 'c3ugforever'\n  }\n};\nvar token = \"\";\nexport var login = function login(source) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('/login', config);\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: LOG_IN,\n                  payload: response.data\n                });\n                memoryStore.token = response.data.token;\n\n                if (source === 'home') {\n                  history.push('/');\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var signIn = function signIn(username) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response, responseData, qotd, questionKey, getResponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                token = {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + memoryStore.token\n                  }\n                };\n                _context2.next = 3;\n                return api.post('/questionoftheday', {\n                  \"UserName\": username\n                }, token);\n\n              case 3:\n                response = _context2.sent;\n                responseData = _objectSpread({}, response.data, {\n                  username: username\n                });\n                dispatch({\n                  type: SIGN_IN,\n                  payload: responseData\n                });\n\n                if (!(response.data.response_key === \"\")) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                history.push('/qotd');\n                _context2.next = 17;\n                break;\n\n              case 10:\n                qotd = response.data.documents[_.findIndex(response.data.documents)];\n                questionKey = qotd.QuestionKey;\n                _context2.next = 14;\n                return api.get(\"/resultsforquestionkey/\".concat(questionKey), token);\n\n              case 14:\n                getResponse = _context2.sent;\n                dispatch({\n                  type: FETCH_RESULT,\n                  payload: getResponse.data\n                });\n                history.push(\"/result/\".concat(questionKey));\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchResult = function fetchResult(questionKey) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                token = {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + memoryStore.token\n                  }\n                };\n                _context3.next = 3;\n                return api.get(\"/resultsforquestionkey/\".concat(questionKey), token);\n\n              case 3:\n                response = _context3.sent;\n                dispatch({\n                  type: FETCH_RESULT,\n                  payload: response.data\n                });\n                history.push(\"/result/\".concat(questionKey));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchQotd = function fetchQotd(questionKey, questionText, questionDescription) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response, payload_back;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                token = {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + memoryStore.token\n                  }\n                };\n                _context4.next = 3;\n                return api.get(\"/resultsforquestionkey/\".concat(questionKey), token);\n\n              case 3:\n                response = _context4.sent;\n                payload_back = response.data;\n                payload_back.Text = questionText;\n                payload_back.Description = questionDescription;\n                dispatch({\n                  type: FETCH_QOTD,\n                  payload: payload_back\n                });\n                history.push(\"/result/\".concat(questionKey));\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchQuestions = function fetchQuestions() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                token = {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + memoryStore.token\n                  }\n                };\n                _context5.next = 3;\n                return api.get('/listquestionsoftheday', token);\n\n              case 3:\n                response = _context5.sent;\n                dispatch({\n                  type: FETCH_QUESTIONS,\n                  payload: {\n                    questions: response.data.documents\n                  }\n                }); //history.push('/responses');\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var submitQotd = function submitQotd(submitData, questionKey) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                token = {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + memoryStore.token\n                  }\n                };\n                _context6.next = 3;\n                return api.post('/response', submitData, token);\n\n              case 3:\n                response = _context6.sent;\n                dispatch({\n                  type: SUBMIT_QOTD,\n                  payload: response.data\n                });\n                history.push(\"/result/\".concat(questionKey));\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/hvoigt/Documents/GitHub/qotd/src/actions/index.js"],"names":["_","api","history","LOG_IN","SIGN_IN","FETCH_RESULT","FETCH_QOTD","FETCH_QUESTIONS","SUBMIT_QOTD","memoryStore","config","headers","auth","token","login","source","dispatch","get","response","type","payload","data","push","signIn","username","post","responseData","response_key","qotd","documents","findIndex","questionKey","QuestionKey","getResponse","fetchResult","fetchQotd","questionText","questionDescription","payload_back","Text","Description","fetchQuestions","questions","submitQotd","submitData"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport api from '../apis/qotd';\nimport history from '../history';\nimport { \n    LOG_IN,\n    SIGN_IN,\n    FETCH_RESULT,\n    FETCH_QOTD,\n    FETCH_QUESTIONS,\n    SUBMIT_QOTD\n} from './types';\nimport memoryStore from '../utils/memory-store';\n\nvar config = {headers: { 'Content-Type': 'application/json' }, auth: { 'username': 'gacres', 'password': 'c3ugforever'}};\nvar token = \"\";\n\nexport const login = (source) => async dispatch => {\n    const response = await api.get('/login', config);\n\n    dispatch({ type: LOG_IN, payload: response.data});\n    memoryStore.token = response.data.token;\n    if (source === 'home') {\n        history.push('/');\n    }\n}\n\nexport const signIn = (username) => async dispatch => {\n    token = {headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + memoryStore.token }};\n    const response = await api.post('/questionoftheday', { \"UserName\": username }, token);\n\n    let responseData={...response.data, username: username};\n    dispatch({ type: SIGN_IN, payload: responseData });\n\n    if (response.data.response_key === \"\") {\n        history.push('/qotd');\n    } else {\n        const qotd = response.data.documents[_.findIndex(response.data.documents)];\n        const questionKey = qotd.QuestionKey;\n        const getResponse = await api.get(`/resultsforquestionkey/${questionKey}`, token);\n        \n        dispatch({ type: FETCH_RESULT, payload: getResponse.data });\n        history.push(`/result/${questionKey}`);\n    }\n};\n\nexport const fetchResult = (questionKey) => async dispatch => {\n    token = {headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + memoryStore.token }};\n    const response = await api.get(`/resultsforquestionkey/${questionKey}`, token);\n\n    dispatch({ type: FETCH_RESULT, payload: response.data });\n    history.push(`/result/${questionKey}`);\n}\n\nexport const fetchQotd = (questionKey,questionText,questionDescription) => async dispatch => {\n    token = {headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + memoryStore.token }};\n    const response = await api.get(`/resultsforquestionkey/${questionKey}`, token);\n    const payload_back = response.data;\n    payload_back.Text = questionText;\n    payload_back.Description = questionDescription;\n    dispatch({ type: FETCH_QOTD, payload: payload_back });\n    history.push(`/result/${questionKey}`);\n};\n\nexport const fetchQuestions = () => async dispatch => {\n    token = {headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + memoryStore.token }};\n    const response = await api.get('/listquestionsoftheday', token);\n    \n    dispatch({ type: FETCH_QUESTIONS, payload: { questions: response.data.documents } });\n    //history.push('/responses');\n};\n\nexport const submitQotd = (submitData, questionKey) => async dispatch => {\n    token = {headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + memoryStore.token }};\n    const response = await api.post('/response', submitData, token);\n\n    dispatch({ type: SUBMIT_QOTD, payload: response.data });\n    history.push(`/result/${questionKey}`);\n};"]},"metadata":{},"sourceType":"module"}